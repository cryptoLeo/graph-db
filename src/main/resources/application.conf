akka {

  extensions = [akka.persistence.Persistence]
  discovery.method="akka-dns"
  actor {
    provider = "cluster"
    serializers {
      jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
      jackson-cbor = "akka.serialization.jackson.JacksonCborSerializer"
    }


    serialization-bindings {
      "com.example.graphdb.CborSerializable" = jackson-cbor
    }

  }

  remote.artery {
    canonical {
      hostname = "127.0.0.1"
      port = 2552
    }
  }


  cluster {
    seed-nodes = [
      "akka://ClusterSystem@127.0.0.1:2552"
      ]
    roles = ["write-model", "read-model"]
  }


  # use Cassandra to store both snapshots and the events of the persistent actors
  persistence {
    journal.plugin = "akka.persistence.cassandra.journal"
    snapshot-store.plugin = "akka.persistence.cassandra.snapshot"
  }

}

cassandra-journal {
  contact-points = ["localhost"]
  port = 9042
  keyspace = "akka"
}

GraphConfig {
  http {
    interface = "0.0.0.0"
    port = 8081
  }

  readSideConfig {
    producerParallelism = 1
    idleTimeout = 10 seconds
  }
}

askTimeout = 10 s

datastax-java-driver {
  advanced.reconnect-on-init = on
}



akka.persistence.cassandra {

  journal.keyspace-autocreate = on
  journal.tables-autocreate = on
  snapshot.keyspace-autocreate = on
  snapshot.tables-autocreate = on
}
event.processor {
  id = "EventProcessor"
  keep-alive-interval = 1 seconds
  tag-prefix = "tag"
  parallelism = 1
}


